syntax = "proto3";

message EntityAction {
    string type = 1;
    optional string tag = 2;
    string payload = 3;
}

message ManyEntityAction {
    repeated EntityAction actions = 1;
}

message SendBatchResponse {}

message UnsubscribeRequest {
    string event_id = 1;
}
message SubscribeRequest {
    string event_id = 1;
}
message SubscribeResponse {}
message UnsubscribeResponse {}

message StreamEventsRequest {}
message StreamEventsResponse {
    string event_id = 1;
    string event_data = 2;
}

message PullEventsRequest {}
message PullEventsResponse {
    message EventData {
        string event_id = 1;
        string event_data = 2;
    }
    repeated EventData events = 1;
}

service EngineAPIService {
  rpc SendBatch(ManyEntityAction) returns (SendBatchResponse) {}
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse) {}
  rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse) {}
  rpc StreamEvents(StreamEventsRequest) returns (stream StreamEventsResponse) {}
  rpc PullEvents(PullEventsRequest) returns (PullEventsResponse) {}
}
