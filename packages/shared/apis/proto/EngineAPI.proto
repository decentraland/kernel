syntax = "proto3";

message OpenExternalUrlBody {
    string url = 1;
}

message OpenNFTDialogBody {
    string asset_contract_address = 1; 
    string token_id = 2; 
    optional string comment = 3;
}

message CreateEntityBody {
    string id = 1;
}

message RemoveEntityBody {
    string id = 1;
}

message UpdateEntityComponentBody {
    string entity_id = 1;
    int32 class_id = 2;
    string name = 3;
    string json = 4;
}

message AttachEntityComponentBody {
    string entity_id = 1;
    string name = 2;
    string id = 3;
}

message ComponentRemovedBody {
    string entity_id = 1;
    string name = 2;
}

message SetEntityParentBody {
    string entity_id = 1;
    string parent_id = 2;
}

enum QueryType {
    InvalidQueryType = 0;
    HitFirst = 1; 
    HitAll = 2; 
    HitFirstAvatar = 3; 
    HitAllAvatars = 4;
}

message QueryBody {
    QueryType query_id = 1;
    string payload = 2;
}

message ComponentCreatedBody {
    string id = 1;
    int32 class_id = 2;
    string name = 3;
}

message ComponentDisposedBody {
    string id = 1;
}

message ComponentUpdatedBody {
    string id = 1;
    string json = 2;
}

message InitMessagesFinishedBody {

}

message Payload {
    optional OpenExternalUrlBody open_external_url = 1;
    optional OpenNFTDialogBody open_nft_dialog = 2;
    optional CreateEntityBody create_entity = 3;
    optional RemoveEntityBody remove_entity = 4;
    optional UpdateEntityComponentBody update_entity_component = 5;
    optional AttachEntityComponentBody attach_entity_component = 6;
    optional ComponentRemovedBody component_removed = 7;
    optional SetEntityParentBody set_entity_parent = 8;
    optional QueryBody query = 9;
    optional ComponentCreatedBody component_created = 10;
    optional ComponentDisposedBody component_disposed = 11;
    optional ComponentUpdatedBody component_updated = 12;
    optional InitMessagesFinishedBody init_messages_finished = 13;
}

enum EAType {
    InvalidEAType = 0;
    OpenExternalUrl = 1;
    OpenNFTDialog = 2;
    CreateEntity = 3;
    RemoveEntity = 4;
    UpdateEntityComponent = 5;
    AttachEntityComponent = 6;
    ComponentRemoved = 7;
    SetEntityParent = 8;
    Query = 9;
    ComponentCreated = 10;
    ComponentDisposed = 11;
    ComponentUpdated = 12;
    InitMessagesFinished = 13;
}

message EntityAction {
    EAType type = 1;
    optional string tag = 2;
    Payload payload = 3;
}

message ManyEntityAction {
    repeated EntityAction actions = 1;
}

message SendBatchResponse {}

message UnsubscribeRequest {
    string event_id = 1;
}
message SubscribeRequest {
    string event_id = 1;
}
message SubscribeResponse {}
message UnsubscribeResponse {}


// Events
enum EventDataType {
    Generic = 0;
    PositionChanged = 1;
    RotationChanged = 2;
}

message GenericPayload {
    string event_id = 3;
    string event_data = 4;
}

message ReadOnlyVector3 {
    float x = 1;
    float y = 2;
    float z = 3;
}

message ReadOnlyQuaternion {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

message PositionChangedPayload {
    ReadOnlyVector3 position = 1;
    ReadOnlyVector3 camera_position = 2;
    float player_height = 3;
}

message RotationChangedPayload {
    ReadOnlyVector3 rotation = 1;
    ReadOnlyQuaternion quaternion = 2;
}

message EventData {
    EventDataType type = 1;
    optional GenericPayload generic = 2;
    optional PositionChangedPayload position_changed = 3;
    optional RotationChangedPayload rotation_changed = 4;
}

message PullEventsRequest {}
message PullEventsResponse {
    repeated EventData events = 1;
}

service EngineAPIService {
  rpc SendBatch(ManyEntityAction) returns (SendBatchResponse) {}
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse) {}
  rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse) {}
  rpc PullEvents(PullEventsRequest) returns (PullEventsResponse) {}
}
