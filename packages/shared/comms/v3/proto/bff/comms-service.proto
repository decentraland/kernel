syntax = "proto3";

message Subscription {
  uint32 subscription_id = 1;
}

message SubscriptionRequest {
  string topic = 1;
}

message PeerTopicSubscriptionResultElem {
  bytes payload = 1;
  string topic = 2;
  string sender = 3;
}

message SystemTopicSubscriptionResultElem {
  bytes payload = 1;
  string topic = 2;
}

message PublishToTopicRequest {
  string topic = 1;
  bytes payload = 2;
}

message PublishToTopicResult {
  bool ok = 1;
}

message UnsubscriptionResult {
  bool ok = 1;
}

service CommsService {
  rpc SubscribeToPeerMessages(SubscriptionRequest) returns (Subscription) {}
  rpc GetPeerMessages(Subscription) returns (stream PeerTopicSubscriptionResultElem) {}
  rpc UnsubscribeToPeerMessages(Subscription) returns (UnsubscriptionResult) {}

  rpc SubscribeToSystemMessages(SubscriptionRequest) returns (Subscription) {}
  rpc GetSystemMessages(Subscription) returns (stream SystemTopicSubscriptionResultElem) {}
  rpc UnsubscribeToSystemMessages(Subscription) returns (UnsubscriptionResult) {}


  // send a peer message to a topic
  rpc PublishToTopic(PublishToTopicRequest) returns (PublishToTopicResult) {}
}
